name: multi-env-deployment
on: 
  # push:
  #   branches:
  #     - main
  #     - dev
  #     - stage
  workflow_dispatch:
    inputs:
      branch:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - stage
          - main
      image_tag:
        description: 'Docker image tag'
        required: true
        default: 'latest'
env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  IMAGE_NAME: multi-env-app
  IMAGE_TAG: ${{ github.event.inputs.image_tag }}-${{ github.event.inputs.branch }}

jobs:
  image-build:
    runs-on: self-hosted
    steps:
      - name: checkout-code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          ref: ${{ github.event.inputs.branch }}

      - name: docker-login
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      
      - name: build-and-push
        run: |
          docker build -t ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          docker push ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
  
  image-tag:
    needs: image-build
    runs-on: self-hosted
    steps:
      - name: checkout-code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          ref: ${{ github.event.inputs.branch }}
      
      - name: edit image tags
        run: |
          git config --global user.name "charan"
          git config --global user.email "charan@actions.com"
          git switch ${{ github.event.inputs.branch }}
          if [ "${{ github.event.inputs.branch }}" == "dev" ]; then
          sed -i "s/tag: .*/tag: \"${{ env.IMAGE_TAG }}\"/g" multi-env/values-dev.yaml
          elif [ "${{ github.event.inputs.branch }}" == "stage" ]; then
          sed -i "s/tag: .*/tag: \"${{ env.IMAGE_TAG }}\"/g" multi-env/values-stage.yaml
          else
          sed -i "s/tag: .*/tag: \"${{ env.IMAGE_TAG }}\"/g" multi-env/values-prod.yaml
          fi

          git add .

          if git diff --cached --quiet; then
          echo "No changes to commit"
          else
          git commit -m "Updated image tag to ${{ github.event.inputs.image_tag }} in ${{ github.event.inputs.branch }} branch"
          git push origin ${{ github.event.inputs.branch }}
          fi
    
  deploy:
    needs: image-tag
    runs-on: self-hosted
    steps:
      - name: checkout-code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          ref: ${{ github.event.inputs.branch }}
      
      - name: deploying to k8s cluster
        run: |
          APP_NAME="multi-${{ github.event.inputs.branch }}"

          if ! argocd app get $APP_NAME &>/dev/null; then
            echo "Application not found. Creating..."
            argocd app create -f argocd/argocd-${{ github.event.inputs.branch }}.yml
          fi

          # Sync the application
          argocd app sync $APP_NAME
